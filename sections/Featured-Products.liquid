<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{ section.settings.heading }}</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .img-fluid {
      max-width: 100%;
      height: auto;
    }
    .card {
      margin-bottom: 1rem;
    }
    .product-info {
      text-align: center;
      padding: 1rem;
    }
    .product-name {
      font-weight: bold;
      margin-top: 0.5rem;
    }
    .price {
      color: #888;
    }
    .add-to-cart-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
      align-items: center;
      justify-content: center;
    }
    .add-to-cart-modal .modal-content {
      background: white;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
      width: 500px; /* Fixed width */
      height: 500px; /* Fixed height */
      overflow: auto; /* Allows scrolling if content overflows */
    }
    .add-to-cart-modal.show {
      display: flex;
    }
    #modal-image {
      height: 300px;
      object-fit: contain; /* Keeps aspect ratio */
      max-width: 100%;
      margin-bottom: 1rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2 class="text-left">{{ section.settings.heading }}</h2>
    <div class="row">
      {% for block in section.blocks %}
        <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4">
          <div class="card">
            <img src="{{ block.settings.slide_img | img_url: '400x' }}" alt="{{ block.settings.product_name }}" class="img-fluid product-image" data-product-id="{{ block.settings.product_id }}" data-product-img="{{ block.settings.slide_img | img_url: '800x' }}" data-product-name="{{ block.settings.product_name }}" data-product-price="{{ block.settings.price }}" />
            <div class="card-body product-info">
              <h5 class="product-name">{{ block.settings.product_name }}</h5>
              <p class="price">{{ block.settings.price }}</p>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>

  <div id="add-to-cart-modal" class="add-to-cart-modal">
    <div class="modal-content">
      <img id="modal-image" src="" alt="Product Image" class="img-fluid mb-3"/>
      <h5 id="modal-name"></h5>
      <p id="modal-price"></p>
      <h2>Product Added to Cart</h2>
      <p>Your product has been successfully added to the cart.</p>
      <button class="close btn btn-primary">Close</button>
      <button id="add-to-cart" class="btn btn-secondary mt-3">View Cart</button> <!-- New button -->
    </div>
  </div>

  <!-- Optional: include Bootstrap JS and dependencies -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <!-- Custom JavaScript -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const modal = document.getElementById('add-to-cart-modal');
      const modalImage = document.getElementById('modal-image');
      const modalName = document.getElementById('modal-name');
      const modalPrice = document.getElementById('modal-price');
      const closeButton = modal.querySelector('.close');
      const addToCartButton = document.getElementById('add-to-cart'); // Updated button

      let currentProductId = null;

      document.querySelectorAll('.product-image').forEach(image => {
        image.addEventListener('click', function() {
          const imgSrc = image.getAttribute('data-product-img');
          const name = image.getAttribute('data-product-name');
          const price = image.getAttribute('data-product-price');
          currentProductId = image.getAttribute('data-product-id'); // Store current product ID
          modalImage.src = imgSrc; // Set the image source in the modal
          modalName.textContent = name; // Set the product name in the modal
          modalPrice.textContent = price; // Set the product price in the modal
          modal.classList.add('show'); // Show the modal
        });
      });

      closeButton.addEventListener('click', function() {
        modal.classList.remove('show'); // Hide the modal
      });

      addToCartButton.addEventListener('click', function() {
        if (currentProductId) {
          // Implement your logic for adding the item to the cart here
          // Example: Redirect to cart with product ID
          window.location.href = /cart/add?id=${currentProductId}; // Example URL
        } else {
          alert('Product ID is missing.');
        }
      });
    });
  </script>

  <div class="container mt-5">
    <h2>{{ section.settings.section_title }}</h2>
    {% if section.settings.product_selection %}
      {% assign product = all_products[section.settings.product_selection] %}
      {% if product %}
        <h3>{{ product.title }}</h3>
        {% if product.featured_image %}
          <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}" class="img-fluid">
        {% endif %}
        
        <form id="product-update-form" class="mt-4">
          <div class="form-group">
            <label for="product-title">Product Title</label>
            <input type="text" class="form-control" id="product-title" value="{{ product.title }}" required>
          </div>
          <div class="form-group">
            <label for="product-description">Product Description</label>
            <textarea class="form-control" id="product-description" rows="3" required>{{ product.description }}</textarea>
          </div>
          <div class="form-group">
            <label for="product-price">Product Price</label>
            <input type="number" class="form-control" id="product-price" value="{{ product.variants.first.price }}" required>
          </div>
          <button type="submit" class="btn btn-primary">Update Product</button>
        </form>
      {% else %}
        <p>Selected product could not be found.</p>
      {% endif %}
    {% else %}
      <p>Please select a product to manage.</p>
    {% endif %}
  </div>

  <script>
   const express = require('express');
const bodyParser = require('body-parser');
const axios = require('axios');

const app = express();
const port = 3000;

// Replace with your Shopify store credentials
const SHOPIFY_STORE_URL = 'your-store.myshopify.com';
const SHOPIFY_API_KEY = 'your-api-key';
const SHOPIFY_API_PASSWORD = 'your-api-password';

app.use(bodyParser.json());

app.post('/update-product', async (req, res) => {
  const { productId, title, description, price, variantId } = req.body;

  try {
    const response = await axios({
      method: 'PUT',
      url: https://${SHOPIFY_API_KEY}:${SHOPIFY_API_PASSWORD}@${SHOPIFY_STORE_URL}/admin/api/2024-01/products/${productId}.json,
      data: {
        product: {
          title,
          body_html: description,
          variants: [{
            id: variantId,
            price
          }]
        }
      },
      headers: {
        'Content-Type': 'application/json'
      }
    });
    res.json(response.data);
  } catch (error) {
    console.error('Error updating product:', error);
    res.status(500).json({ error: 'Failed to update product' });
  }
});

app.listen(port, () => {
  console.log(Server running at http://localhost:${port});

      });
    });
  </script>
</body>
</html>

{% schema %}
{
  "name": "Featured Products",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "Featured Products"
    }
  ],
  "blocks": [
    {
      "name": "Product",
      "type": "image",
      "settings": [
        {
          "type": "image_picker",
          "id": "slide_img",
          "label": "Select Image"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Product URL"
        },
        {
          "type": "text",
          "id": "product_name",
          "label": "Product Name",
          "default": "Product Name"
        },
        {
          "type": "text",
          "id": "price",
          "label": "Price",
          "default": "$0.00"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured Products"
    }
  ]
}
{% endschema %}